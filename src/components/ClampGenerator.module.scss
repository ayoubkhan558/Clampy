@import '../styles/clamp';

.container {
  min-height: 100vh;
  background: var(--bg-secondary);
  @include fluid-padding(16, 24, 320, 1200, 'px');
  font-family: var(--font-family-sans);
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.layout {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: var(--space-6);
  max-width: calc(100% - 50px);
  align-items: start;

  @media (max-width: 1024px) {
    grid-template-columns: 1fr;
    gap: var(--space-5);
  }
}

.leftColumn {
  position: sticky;
  top: var(--space-6);
}

.rightColumn {
  min-height: 600px;
}

.formCard,
.outputCard {
  background: var(--bg-card);
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow-md);
  border: 1px solid var(--border-primary);
  transition: var(--transition-base);

  &:hover {
    box-shadow: var(--shadow-lg);
  }
}

.formCard {
  @include fluid-padding(24, 32, 320, 1200, 'px');
}

.outputCard {
  height: 100%;
  display: flex;
  flex-direction: column;
}

.header {
  @include fluid-padding(24, 32, 320, 1200, 'px');
  border-bottom: 1px solid var(--border-primary);
  text-align: center;
}

.title {
  @include fluid-font-size(24, 32, 320, 1200, 'px');
  font-weight: 700;
  color: var(--text-primary);
  margin: 0 0 8px 0;
  line-height: 1.2;
}

.subtitle {
  @include fluid-font-size(14, 16, 320, 1200, 'px');
  color: var(--text-secondary);
  margin: 0;
  line-height: 1.4;
}

.form {
  margin-top: 24px;
}

.fieldGroup {
  margin-bottom: 20px;

  &:last-child {
    margin-bottom: 0;
  }
}

.label {
  display: block;
  @include fluid-font-size(14, 16, 320, 1200, 'px');
  font-weight: 600;
  color: var(--text-primary);
  margin-bottom: 6px;
  line-height: 1.4;
}

.input {
  width: 100%;
  @include fluid-padding(10, 12, 320, 1200, 'px');
  @include fluid-font-size(14, 16, 320, 1200, 'px');
  border: 1px solid var(--border-primary);
  border-radius: var(--radius-md);
  background: var(--bg-primary);
  color: var(--text-primary);
  transition: var(--transition-base);
  box-sizing: border-box;

  &:focus {
    outline: none;
    border-color: var(--border-focus);
    box-shadow: 0 0 0 2px var(--color-primary-500 / 0.2);
  }

  &:hover:not(:focus) {
    border-color: var(--text-muted);
  }

  &.inputError {
    border-color: var(--border-error);
    
    &:focus {
      box-shadow: 0 0 0 2px var(--color-error-500 / 0.2);
    }
  }
}

.radioGroup {
  display: flex;
  gap: var(--space-4);
  margin-top: var(--space-1);
}

.radioLabel {
  display: flex;
  align-items: center;
  gap: var(--space-1);
  @include fluid-font-size(14, 16, 320, 1200, 'px');
  color: var(--text-primary);
  cursor: pointer;
  transition: var(--transition-base);

  &:hover {
    color: var(--accent-primary);
  }
}

.radio {
  width: var(--space-4);
  height: var(--space-4);
  accent-color: var(--accent-primary);
  cursor: pointer;
}

.row {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: var(--space-4);

  @media (max-width: 480px) {
    grid-template-columns: 1fr;
    gap: var(--space-5);
  }
}

.actions {
  margin-top: var(--space-6);
  display: flex;
  gap: var(--space-3);
  justify-content: center;
}

.resetButton,
.shareButton {
  @include fluid-padding(10, 12, 320, 1200, 'px');
  @include fluid-font-size(14, 16, 320, 1200, 'px');
  border: 1px solid var(--border-primary);
  border-radius: var(--radius-md);
  cursor: pointer;
  transition: var(--transition-base);
  font-weight: var(--font-weight-medium);
  min-width: 120px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: var(--space-2);
  height: 40px;

  &:focus {
    outline: none;
    box-shadow: 0 0 0 2px var(--color-primary-500 / 0.2);
  }

  &:active {
    transform: translateY(0);
  }

  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
}

.resetButton {
  background: var(--bg-secondary);
  color: var(--text-primary);
  border-color: var(--border-primary);

  &:hover:not(:disabled) {
    background: var(--bg-tertiary);
    border-color: var(--text-muted);
  }
}

.shareButton {
  background: var(--accent-primary);
  color: var(--accent-foreground);
  border-color: var(--accent-primary);

  &:hover:not(:disabled) {
    background: var(--accent-hover);
    border-color: var(--accent-hover);
  }

  &:focus {
    box-shadow: 0 0 0 2px var(--color-primary-500 / 0.2);
  }
}

.buttonIcon {
  width: var(--space-4);
  height: var(--space-4);
  flex-shrink: 0;
}

.error {
  display: block;
  @include fluid-font-size(12, 14, 320, 1200, 'px');
  color: var(--error);
  margin-top: var(--space-1);
  line-height: 1.3;
}

.codeOutput {
  margin-top: var(--space-6);
  padding-top: var(--space-6);
  border-top: 1px solid var(--border-primary);

  &:first-of-type {
    margin-top: var(--space-8);
  }
}

.outputHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: var(--space-2);
  gap: var(--space-3);
}

.outputLabel {
  @include fluid-font-size(16, 18, 320, 1200, 'px');
  font-weight: var(--font-weight-semibold);
  color: var(--text-primary);
  margin: 0;
  line-height: 1.3;
}

.copyButton {
  @include fluid-padding(6, 8, 320, 1200, 'px');
  @include fluid-font-size(12, 14, 320, 1200, 'px');
  background: var(--accent-primary);
  color: var(--accent-foreground);
  border: none;
  border-radius: var(--radius-sm);
  cursor: pointer;
  transition: var(--transition-base);
  font-weight: var(--font-weight-medium);
  min-width: 60px;
  flex-shrink: 0;

  &:hover {
    background: var(--accent-hover);
    transform: translateY(-1px);
  }

  &:focus {
    outline: none;
    box-shadow: 0 0 0 3px var(--color-primary-500 / 0.3);
  }

  &:active {
    transform: translateY(0);
  }
}

.codeBlock {
  background: var(--bg-secondary);
  border: 1px solid var(--border-primary);
  border-radius: var(--radius-sm);
  @include fluid-padding(12, 16, 320, 1200, 'px');
  overflow-x: auto;
  margin: 0;

  code {
    @include fluid-font-size(13, 14, 320, 1200, 'px');
    font-family: 'SF Mono', 'Monaco', 'Inconsolata', 'Roboto Mono', 'Consolas',
      'Courier New', monospace;
    color: var(--text-primary);
    white-space: pre;
    line-height: 1.5;
  }
}

// Tab styles
.tabContainer {
  height: 100%;
  display: flex;
  flex-direction: column;
}

.tabList {
  display: flex;
  border-bottom: 1px solid var(--border-primary);
  background: var(--bg-secondary);
  border-radius: var(--radius-lg) var(--radius-lg) 0 0;
  padding: 4px;
  gap: 2px;
}

.tab {
  flex: 1;
  @include fluid-padding(12, 16, 320, 1200, 'px');
  @include fluid-font-size(14, 16, 320, 1200, 'px');
  background: transparent;
  border: none;
  color: var(--text-secondary);
  cursor: pointer;
  transition: var(--transition-base);
  font-weight: 500;
  border-radius: var(--radius-md);
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
  min-height: 40px;

  &:hover:not(.tabActive) {
    background: var(--bg-tertiary);
    color: var(--text-primary);
  }

  &:focus {
    outline: none;
    box-shadow: 0 0 0 2px hsl(221.2 83.2% 53.3% / 0.2);
  }
}

.tabActive {
  background: var(--bg-primary);
  color: var(--accent-primary);
  font-weight: 600;
  box-shadow: var(--shadow);
  border: 1px solid var(--border-primary);

  &:hover {
    background: var(--bg-primary);
    color: var(--accent-primary);
  }
}

.tabIcon {
  width: 16px;
  height: 16px;
  flex-shrink: 0;
}

.tabText {
  font-weight: inherit;
  line-height: 1.2;
}

.tabContent {
  flex: 1;
  background: var(--bg-primary);
  border-radius: 0 0 var(--radius) var(--radius);
  overflow: hidden;
}

.tabPanel {
  height: 100%;
  @include fluid-padding(20, 24, 320, 1200, 'px');
  overflow-y: auto;
}

.tableHeader {
  margin-bottom: 20px;
  text-align: center;
}

.tableTitle {
  @include fluid-font-size(18, 20, 320, 1200, 'px');
  font-weight: 600;
  color: var(--text-primary);
  margin: 0 0 4px 0;
  line-height: 1.3;
}

.tableSubtitle {
  @include fluid-font-size(14, 16, 320, 1200, 'px');
  color: var(--text-secondary);
  margin: 0 0 16px 0;
  line-height: 1.4;
}

.breakpointActions {
  display: flex;
  justify-content: flex-end;
  margin-top: 12px;
}

.addBreakpointButton {
  @include fluid-padding(8, 10, 320, 1200, 'px');
  @include fluid-font-size(13, 14, 320, 1200, 'px');
  background: var(--accent-primary);
  color: var(--accent-foreground);
  border: 1px solid var(--accent-primary);
  border-radius: var(--radius-md);
  cursor: pointer;
  transition: var(--transition-base);
  font-weight: 500;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 6px;
  height: 32px;

  &:hover {
    background: var(--accent-hover);
    border-color: var(--accent-hover);
  }

  &:focus {
    outline: none;
    box-shadow: 0 0 0 2px var(--color-primary-500 / 0.2);
  }
}

.addBreakpointForm {
  background: var(--bg-secondary);
  border: 1px solid var(--border-primary);
  border-radius: var(--radius-md);
  @include fluid-padding(16, 20, 320, 1200, 'px');
  margin-bottom: 20px;
}

.formRow {
  display: grid;
  grid-template-columns: 2fr 1fr 2fr;
  gap: 12px;
  margin-bottom: 12px;

  @media (max-width: 768px) {
    grid-template-columns: 1fr;
    gap: 8px;
  }
}

.formActions {
  display: flex;
  gap: 8px;
  justify-content: flex-end;
}

.addButton {
  @include fluid-padding(8, 10, 320, 1200, 'px');
  @include fluid-font-size(13, 14, 320, 1200, 'px');
  background: var(--success);
  color: var(--success-foreground);
  border: 1px solid var(--success);
  border-radius: var(--radius-md);
  cursor: pointer;
  transition: var(--transition-base);
  font-weight: 500;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 6px;
  height: 32px;
  min-width: 70px;

  &:hover:not(:disabled) {
    background: var(--color-success-600);
    border-color: var(--color-success-600);
  }

  &:focus {
    outline: none;
    box-shadow: 0 0 0 2px var(--color-success-500 / 0.2);
  }

  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
}

.cancelButton {
  @include fluid-padding(8, 10, 320, 1200, 'px');
  @include fluid-font-size(13, 14, 320, 1200, 'px');
  background: var(--bg-secondary);
  color: var(--text-primary);
  border: 1px solid var(--border-primary);
  border-radius: var(--radius-md);
  cursor: pointer;
  transition: var(--transition-base);
  font-weight: 500;
  height: 32px;
  min-width: 70px;

  &:hover {
    background: var(--bg-tertiary);
    border-color: var(--text-muted);
  }

  &:focus {
    outline: none;
    box-shadow: 0 0 0 2px var(--color-primary-500 / 0.2);
  }
}

.formErrors {
  margin-bottom: 12px;
  display: flex;
  flex-direction: column;
  gap: 4px;
}

// Responsive adjustments
@media (max-width: 1024px) {
  .leftColumn {
    position: static;
  }

  .layout {
    align-items: stretch;
  }

  .rightColumn {
    min-height: 500px;
  }
}

@media (max-width: 768px) {
  .container {
    padding: 16px;
  }

  .layout {
    gap: 16px;
  }

  .formCard {
    padding: 20px;
  }

  .outputHeader {
    flex-direction: column;
    align-items: flex-start;
    gap: 8px;
  }

  .copyButton {
    align-self: flex-end;
  }

  .tabPanel {
    padding: 16px;
  }

  .tab {
    padding: 12px 16px;
    font-size: 14px;
    min-height: 44px;
    gap: 6px;
  }

  .tabIcon {
    font-size: 14px;
  }

  .tabText {
    font-size: 13px;
  }
}

@media (max-width: 480px) {
  .container {
    padding: 12px;
  }

  .formCard {
    padding: 16px;
  }

  .tabPanel {
    padding: 12px;
  }

  .rightColumn {
    min-height: 400px;
  }

  .actions {
    flex-direction: column;
    gap: 8px;
  }

  .resetButton,
  .shareButton {
    min-width: 100%;
  }
}

// Focus visible for better accessibility
.input:focus-visible,
.radio:focus-visible,
.resetButton:focus-visible,
.copyButton:focus-visible {
  outline: 2px solid var(--accent-primary);
  outline-offset: 2px;
}

// High contrast mode support
@media (prefers-contrast: high) {
  :root {
    --border-color: #000000;
    --text-secondary: #000000;
  }

  .input,
  .resetButton {
    border-width: 2px;
  }
}

// Table styles for breakpoint preview
.tableContainer {
  overflow-x: auto;
  border-radius: var(--radius-sm);
  border: 1px solid var(--border-primary);
  background: var(--bg-primary);
}

.breakpointTable {
  width: 100%;
  border-collapse: collapse;
  @include fluid-font-size(14, 16, 320, 1200, 'px');

  th, td {
    @include fluid-padding(12, 16, 320, 1200, 'px');
    text-align: left;
    border-bottom: 1px solid var(--border-primary);
  }

  th {
    background: var(--bg-secondary);
    font-weight: 600;
    color: var(--text-primary);
    position: sticky;
    top: 0;
    z-index: 1;
  }

  tbody tr {
    transition: var(--transition-base);

    &:hover {
      background: var(--bg-secondary);
    }

    &:last-child td {
      border-bottom: none;
    }
  }
}

// Row status colors
.rowmin {
  background: rgba(220, 53, 69, 0.05);
  
  &:hover {
    background: rgba(220, 53, 69, 0.1);
  }
}

.rowmax {
  background: rgba(25, 135, 84, 0.05);
  
  &:hover {
    background: rgba(25, 135, 84, 0.1);
  }
}

.rowfluid {
  background: rgba(13, 110, 253, 0.05);
  
  &:hover {
    background: rgba(13, 110, 253, 0.1);
  }
}

// Cell styles
.deviceCell {
  min-width: 180px;
}

.deviceInfo {
  display: flex;
  align-items: center;
  gap: 12px;
}

.deviceIcon {
  width: 20px;
  height: 20px;
  flex-shrink: 0;
  color: var(--text-secondary);

  &.iconmobile {
    color: var(--accent-primary);
  }

  &.icontablet {
    color: var(--warning);
  }

  &.icondesktop {
    color: var(--success);
  }
}

.deviceName {
  font-weight: 600;
  color: var(--text-primary);
  line-height: 1.2;
}

.deviceModel {
  @include fluid-font-size(12, 14, 320, 1200, 'px');
  color: var(--text-secondary);
  line-height: 1.2;
}

.widthCell {
  font-family: 'SF Mono', 'Monaco', 'Inconsolata', 'Roboto Mono', 'Consolas',
    'Courier New', monospace;
  color: var(--text-primary);
  font-weight: 500;
}

.valueCell {
  font-family: 'SF Mono', 'Monaco', 'Inconsolata', 'Roboto Mono', 'Consolas',
    'Courier New', monospace;
}

.computedValue {
  font-weight: 600;
  color: var(--text-primary);
}

.statusCell {
  text-align: center;
}

.statusBadge {
  display: inline-block;
  @include fluid-padding(4, 6, 320, 1200, 'px');
  @include fluid-font-size(11, 12, 320, 1200, 'px');
  font-weight: 700;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  border-radius: var(--radius-sm);
  line-height: 1;
}

.statusmin {
  background: var(--error);
  color: white;
}

.statusmax {
  background: var(--success);
  color: white;
}

.statusfluid {
  background: var(--accent-primary);
  color: white;
}

.actionsCell {
  text-align: center;
  width: 60px;
}

.deleteButton {
  @include fluid-padding(4, 6, 320, 1200, 'px');
  background: var(--error);
  color: var(--error-foreground);
  border: 1px solid var(--error);
  border-radius: var(--radius-sm);
  cursor: pointer;
  transition: var(--transition-base);
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 28px;
  height: 28px;

  &:hover {
    background: var(--color-error-600);
    border-color: var(--color-error-600);
  }

  &:focus {
    outline: none;
    box-shadow: 0 0 0 2px var(--color-error-500 / 0.2);
  }

  .buttonIcon {
    width: 14px;
    height: 14px;
  }
}

// Dark mode adjustments for table
@media (prefers-color-scheme: dark) {
  .rowmin {
    background: rgba(255, 107, 107, 0.1);
    
    &:hover {
      background: rgba(255, 107, 107, 0.15);
    }
  }

  .rowmax {
    background: rgba(81, 207, 102, 0.1);
    
    &:hover {
      background: rgba(81, 207, 102, 0.15);
    }
  }

  .rowfluid {
    background: rgba(77, 171, 247, 0.1);
    
    &:hover {
      background: rgba(77, 171, 247, 0.15);
    }
  }
}

// Responsive table adjustments
@media (max-width: 768px) {
  .tableContainer {
    font-size: 14px;
  }

  .breakpointTable {
    th, td {
      padding: 8px 12px;
    }
  }

  .deviceInfo {
    gap: 8px;
  }

  .deviceIcon {
    font-size: 16px;
  }

  .statusBadge {
    padding: 3px 6px;
    font-size: 10px;
  }

  .formRow {
    grid-template-columns: 1fr;
  }

  .formActions {
    justify-content: stretch;
    
    .addButton,
    .cancelButton {
      flex: 1;
    }
  }

  .breakpointActions {
    justify-content: center;
  }
}

// Reduced motion support
@media (prefers-reduced-motion: reduce) {
  * {
    transition: none !important;
    animation: none !important;
  }
}