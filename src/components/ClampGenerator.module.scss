@import '../styles/clamp';
@import '../styles/variables';

.container {
}

.layout {
  display: grid;
  // Mobile-first: single column and compact gap
  grid-template-columns: 1fr;
  gap: 16px;
  max-width: calc(100% - 0px);
  margin: 0 auto;
  align-items: start;
  // Enhance spacing and switch to 2 columns at larger breakpoints
  @include md { gap: var(--space-5); }
  @include lg { grid-template-columns: 1fr 1fr; gap: var(--space-6); }
}

.leftColumn {
  position: sticky;
  top: var(--space-6);
}

.rightColumn {
  position: sticky;
  top: var(--space-6);
  height: fit-content;
  // Mobile base: shorter min-height
  min-height: 400px;
}

.formCard,
.outputCard {
  background: var(--bg-card);
  border-radius: var(--radius-lg);
  // Mobile-first compact padding, scale up with breakpoints
  padding: 16px;
  box-shadow: var(--shadow-md);
  border: 1px solid var(--border-primary);
  backdrop-filter: blur(8px);
  @include sm { padding: 20px; }
  @include md { padding: var(--space-5); }
}

.outputCard {
  height: 100%;
  display: flex;
  flex-direction: column;
}

.header {
  text-align: center;
  margin-bottom: var(--space-6);
  padding-bottom: var(--space-4);
  border-bottom: 1px solid var(--border-primary);
  // Tighter spacing on small screens
  margin-bottom: 20px;
  padding-bottom: 16px;
  @include md { margin-bottom: var(--space-6); padding-bottom: var(--space-4); }
}

.titleContainer {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 12px;
  margin-bottom: var(--space-4);
}

.segmentedControl {
  display: flex;
  border: 1px solid var(--border-secondary);
  border-radius: var(--radius-md);
  overflow: hidden;
  width: 100%;
}

.segmentButton {
  flex: 1;
  padding: var(--space-2) var(--space-3);
  background-color: transparent;
  border: none;
  color: var(--text-secondary);
  cursor: pointer;
  transition: background-color 0.2s, color 0.2s;
  font-weight: var(--font-weight-medium);
  font-size: 14px;

  &:not(:last-child) {
    border-right: 1px solid var(--border-secondary);
  }

  &.active {
    background-color: var(--accent-primary);
    color: var(--accent-foreground);
  }

  &:hover:not(.active) {
    background-color: var(--bg-tertiary);
  }
}

.title {
  @include fluid-font-size(28, 32, 320, 1200, 'px');
  font-weight: var(--font-weight-bold);
  color: var(--text-primary);
  margin: 0;
  line-height: 1.2;
}

.developerInfo {
  position: relative;
  display: inline-block;
}

.developerTrigger {
  @include fluid-font-size(12, 14, 320, 1200, 'px');
  color: var(--text-secondary);
  background: var(--bg-secondary);
  padding: 4px 8px;
  border-radius: var(--radius-sm);
  font-weight: 500;
  cursor: pointer;
  transition: var(--transition-base);
  border: 1px solid var(--border-primary);

  &:hover {
    color: var(--accent-primary);
    background: var(--bg-tertiary);
    border-color: var(--accent-primary);
  }
}

.developerPopover {
  position: absolute;
  top: 100%;
  left: 50%;
  transform: translateX(-50%);
  margin-top: 8px;
  background: var(--bg-primary);
  border: 1px solid var(--border-primary);
  border-radius: var(--radius-md);
  box-shadow: var(--shadow-lg);
  padding: 16px;
  min-width: 200px;
  z-index: 1000;
  opacity: 0;
  visibility: hidden;
  transition: all 0.2s ease;
  backdrop-filter: blur(8px);

  &::before {
    content: '';
    position: absolute;
    top: -6px;
    left: 50%;
    transform: translateX(-50%);
    width: 12px;
    height: 12px;
    background: var(--bg-primary);
    border: 1px solid var(--border-primary);
    border-bottom: none;
    border-right: none;
    transform: translateX(-50%) rotate(45deg);
  }

  .developerInfo:hover & {
    opacity: 1;
    visibility: visible;
    transform: translateX(-50%) translateY(4px);
  }
}

.popoverContent {
  text-align: center;
}

.developerName {
  font-weight: 600;
  color: var(--text-primary);
  margin-bottom: 12px;
  font-size: 14px;
}

.developerLinks {
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.developerLink {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 6px;
  padding: 6px 12px;
  background: var(--bg-secondary);
  border: 1px solid var(--border-primary);
  border-radius: var(--radius-sm);
  color: var(--text-primary);
  text-decoration: none;
  font-size: 12px;
  font-weight: 500;
  transition: var(--transition-base);

  &:hover {
    background: var(--accent-primary);
    color: var(--accent-foreground);
    border-color: var(--accent-primary);
    transform: translateY(-1px);
  }
}

.subtitle {
  @include fluid-font-size(14, 16, 320, 1200, 'px');
  color: var(--text-secondary);
  margin: 0;
  line-height: 1.4;
}

.form {
  margin-top: 24px;
}

.fieldGroup {
  margin-bottom: 20px;

  &:last-child {
    margin-bottom: 0;
  }
}

.label {
  display: block;
  @include fluid-font-size(14, 16, 320, 1200, 'px');
  font-weight: 600;
  color: var(--text-primary);
  margin-bottom: 6px;
  line-height: 1.4;
}

.input {
  width: 100%;
  @include fluid-padding(10, 12, 320, 1200, 'px');
  @include fluid-font-size(14, 16, 320, 1200, 'px');
  border: 1px solid var(--border-primary);
  border-radius: var(--radius-md);
  background: var(--bg-primary);
  color: var(--text-primary);
  transition: var(--transition-base);
  box-sizing: border-box;

  &:focus {
    outline: none;
    border-color: var(--border-focus);
    box-shadow: 0 0 0 2px var(--accent-primary / 0.2);
  }

  &:hover:not(:focus) {
    border-color: var(--text-muted);
  }

  &.inputError {
    border-color: var(--border-error);

    &:focus {
      box-shadow: 0 0 0 2px var(--error / 0.2);
    }
  }
}

// Toggle Button Group
.toggleGroup {
  display: flex;
  border-radius: var(--radius-md);
  overflow: hidden;
  border: 1px solid var(--border-primary);
  background: var(--bg-primary);
}

.toggleButton {
  flex: 1;
  padding: 12px 16px;
  @include fluid-font-size(14, 16, 320, 1200, 'px');
  font-weight: 500;
  border: none;
  background: transparent;
  color: var(--text-secondary);
  cursor: pointer;
  transition: all 0.2s ease;
  position: relative;

  &:not(:last-child) {
    border-right: 1px solid var(--border-primary);
  }

  &:hover {
    background: var(--bg-secondary);
    color: var(--text-primary);
  }

  &.toggleActive {
    background: var(--color-primary-600);
    color: white;
    font-weight: 600;
  }
}

// Checkbox Styling
.checkboxGroup {
  margin-top: var(--space-1);
}

.checkboxLabel {
  display: flex;
  align-items: flex-start;
  gap: var(--space-2);
  @include fluid-font-size(14, 16, 320, 1200, 'px');
  color: var(--text-primary);
  cursor: pointer;
  line-height: 1.4;
  transition: var(--transition-base);

  &:hover {
    color: var(--color-primary-600);
  }
}

.checkbox {
  width: 18px;
  height: 18px;
  margin-top: 2px;
  accent-color: var(--color-primary-600);
  cursor: pointer;
  border-radius: 3px;
}

.checkboxText {
  flex: 1;
}

.row {
  display: grid;
  // Mobile-first: single column
  grid-template-columns: 1fr;
  gap: var(--space-5);
  margin-bottom: var(--space-5);

  &:last-child {
    margin-bottom: 0;
  }
  @include sm { grid-template-columns: 1fr 1fr; gap: var(--space-4); margin-bottom: var(--space-6); }
}

.actions {
  margin-top: var(--space-6);
  display: flex;
  gap: var(--space-3);
  justify-content: center;
  // Mobile-first: stack actions
  flex-direction: column;
  gap: 8px;
  @include sm { flex-direction: row; gap: var(--space-3); }
}

.resetButton,
.shareButton {
  @include fluid-padding(10, 12, 320, 1200, 'px');
  @include fluid-font-size(14, 16, 320, 1200, 'px');
  border: 1px solid var(--border-primary);
  border-radius: var(--radius-md);
  cursor: pointer;
  transition: var(--transition-base);
  font-weight: var(--font-weight-medium);
  min-width: 120px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: var(--space-2);
  height: 40px;

  &:focus {
    outline: none;
    box-shadow: 0 0 0 2px var(--accent-primary / 0.2);
  }

  &:active {
    transform: translateY(0);
  }

  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
}

.resetButton {
  background: var(--bg-secondary);
  color: var(--text-primary);
  border-color: var(--border-primary);

  &:hover:not(:disabled) {
    background: var(--bg-tertiary);
    border-color: var(--border-secondary);
  }
}

.shareButton {
  background: var(--color-primary-600);
  color: #fff;
  border-color: var(--color-primary-600);

  &:hover:not(:disabled) {
    background: var(--color-primary-700);
    border-color: var(--color-primary-700);
  }

  &:focus {
    box-shadow: 0 0 0 2px var(--accent-primary / 0.2);
  }
}

.buttonIcon {
  width: var(--space-4);
  height: var(--space-4);
  flex-shrink: 0;
}

.error {
  display: block;
  @include fluid-font-size(12, 14, 320, 1200, 'px');
  color: var(--error);
  margin-top: var(--space-1);
  line-height: 1.3;
}

.codeOutput {
  padding-bottom: var(--space-6);
  border-bottom: 1px solid var(--border-primary);

  &:first-of-type {
    margin-top: var(--space-8);
  }
}

.outputHeader {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: var(--space-3);
  gap: var(--space-3);
  // Mobile-first: column layout on small screens
  flex-direction: column;
  align-items: flex-start;
  gap: 8px;
  @include md { flex-direction: row; align-items: center; gap: var(--space-3); }
}

.outputLabel {
  @include fluid-font-size(16, 18, 320, 1200, 'px');
  font-weight: var(--font-weight-semibold);
  color: var(--text-primary);
  margin: 0;
  line-height: 1.3;
}

.copyButton {
  display: flex;
  align-items: center;
  gap: var(--space-2);
  padding: var(--space-2) var(--space-3);
  background: var(--button-secondary-bg);
  color: var(--button-secondary-text);
  border: 1px solid var(--button-secondary-border);
  border-radius: var(--border-radius-md);
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-medium);
  cursor: pointer;
  transition: all var(--transition-fast);

  &:hover {
    background: var(--button-secondary-hover-bg);
    border-color: var(--button-secondary-hover-border);
  }

  &:active {
    transform: translateY(1px);
  }

  &.copied {
    background-color: var(--color-success-500);
    border-color: var(--color-success-500);
    color: white;
  }
  // Mobile-first: align to end on small screens
  align-self: flex-end;
  @include md { align-self: auto; }
}

.codeBlock {
  background: var(--bg-secondary);
  border: 1px solid var(--border-primary);
  border-radius: var(--radius-sm);
  @include fluid-padding(12, 16, 320, 1200, 'px');
  overflow-x: auto;
  margin: 0;

  code {
    @include fluid-font-size(13, 14, 320, 1200, 'px');
    font-family: 'SF Mono', 'Monaco', 'Inconsolata', 'Roboto Mono', 'Consolas',
      'Courier New', monospace;
    color: var(--text-primary);
    white-space: pre;
    line-height: 1.5;
  }
}

// Tab styles
.tabContainer {
  height: 100%;
  display: flex;
  flex-direction: column;
}

.tabList {
  display: flex;
  border-bottom: 1px solid var(--border-primary);
  background: var(--bg-secondary);
  border-radius: var(--radius-lg) var(--radius-lg) 0 0;
  padding: 4px;
  gap: 2px;
}

.tab {
  flex: 1;
  @include fluid-padding(12, 16, 320, 1200, 'px');
  @include fluid-font-size(14, 16, 320, 1200, 'px');
  background: transparent;
  border: 1px solid transparent;
  color: var(--text-secondary);
  cursor: pointer;
  transition: var(--transition-base);
  font-weight: 500;
  border-radius: var(--radius-md);
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
  min-height: 40px;

  &:hover:not(.tabActive) {
    background: var(--bg-tertiary);
    color: var(--text-primary);
  }

  &:focus {
    outline: none;
  }
}

.tabActive {
  background: var(--bg-primary);
  color: var(--color-primary-600);
  border: 1px solid var(--border-primary);

  &:hover {
    background: var(--bg-primary);
    color: var(--color-primary-600);
  }
}

.tabIcon {
  font-size: var(--font-size-base);
  flex-shrink: 0;
  // Mobile-first: smaller icon size
  font-size: 14px;
  @include md { font-size: var(--font-size-base); }
}

.tabText {
  // Mobile-first: hide label and use compact size
  font-size: 13px;
  display: none;
  @include sm { display: inline; }
  @include md { font-size: var(--font-size-sm); }
}

.tabContent {
  flex: 1;
  border-radius: 0 0 var(--radius) var(--radius);
  overflow: hidden;
}

.tabPanel {
  // Mobile-first compact padding
  padding: 12px;
  min-height: 400px;
  @include sm { padding: 16px; }
  @include md { padding: var(--space-6) 0; }
}

.codeOutputs {
  display: flex;
  flex-direction: column;
  gap: var(--space-4);
  // Mobile-first padding adjustments
  padding: 0 12px;
  @include sm { padding: 0 16px; }
  @include md { padding: 0; }
}

.tableHeader {
  margin-bottom: 20px;
  display: flex;
  justify-content: flex-end;
  align-items: center;
}

.tableTitle {
  @include fluid-font-size(18, 20, 320, 1200, 'px');
  font-weight: 600;
  color: var(--text-primary);
  margin: 0 0 4px 0;
  line-height: 1.3;
}

.tableSubtitle {
  @include fluid-font-size(14, 16, 320, 1200, 'px');
  color: var(--text-secondary);
  margin: 0 0 16px 0;
  line-height: 1.4;
}

.breakpointActions {
  display: flex;
  justify-content: flex-end;
}

.addBreakpointButton {
  @include fluid-padding(8, 10, 320, 1200, 'px');
  @include fluid-font-size(13, 14, 320, 1200, 'px');
  background: var(--color-primary-600);
  color: var(--accent-foreground);
  border: 1px solid var(--color-primary-600);
  border-radius: var(--radius-md);
  cursor: pointer;
  transition: var(--transition-base);
  font-weight: 500;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 6px;

  &:hover {
    background: var(--accent-hover);
    border-color: var(--accent-hover);
  }

  &:focus {
    outline: none;
    box-shadow: 0 0 0 2px var(--accent-primary / 0.2);
  }
}

.addBreakpointForm {
  background: var(--bg-secondary);
  border: 1px solid var(--border-primary);
  border-radius: var(--radius-md);
  @include fluid-padding(16, 20, 320, 1200, 'px');
  margin-bottom: 20px;
}

.formRow {
  display: grid;
  // Mobile-first: single column
  grid-template-columns: 1fr;
  gap: 8px;
  margin-bottom: 12px;
  @include md { grid-template-columns: 2fr 1fr 2fr; gap: 12px; }
}

.formActions {
  display: flex;
  gap: 8px;
  justify-content: flex-end;
}

.addButton {
  @include fluid-padding(8, 10, 320, 1200, 'px');
  @include fluid-font-size(13, 14, 320, 1200, 'px');
  background: var(--success);
  color: var(--success-foreground);
  border: 1px solid var(--success);
  border-radius: var(--radius-md);
  cursor: pointer;
  transition: var(--transition-base);
  font-weight: 500;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 6px;
  min-width: 70px;

  &:hover:not(:disabled) {
    background: var(--color-success-600);
    border-color: var(--color-success-600);
  }

  &:focus {
    outline: none;
    box-shadow: 0 0 0 2px var(--color-success-500 / 0.2);
  }

  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
}

.cancelButton {
  @include fluid-padding(8, 10, 320, 1200, 'px');
  @include fluid-font-size(13, 14, 320, 1200, 'px');
  background: var(--bg-secondary);
  color: var(--text-primary);
  border: 1px solid var(--border-primary);
  border-radius: var(--radius-md);
  cursor: pointer;
  transition: var(--transition-base);
  font-weight: 500;
  min-width: 70px;

  &:hover {
    background: var(--bg-tertiary);
    border-color: var(--border-secondary);
  }

  &:focus {
    outline: none;
    box-shadow: 0 0 0 2px var(--accent-primary / 0.2);
  }
}

.formErrors {
  margin-bottom: 12px;
  display: flex;
  flex-direction: column;
  gap: 4px;
}

// Responsive adjustments (mobile-first)
.leftColumn { position: sticky; top: var(--space-6); }
// At medium screens and up, stretch layout and increase right column height
@include md {
  .layout { align-items: stretch; }
  .rightColumn { min-height: 500px; }
}
// At extra large screens, remove the enforced min-height
@include xl {
  .rightColumn { min-height: auto; }
}


// Focus visible for better accessibility
.input:focus-visible,
.radio:focus-visible,
.resetButton:focus-visible,
.copyButton:focus-visible {
  outline: 2px solid var(--color-primary-600);
  outline-offset: 2px;
}

// High contrast mode support
@media (prefers-contrast: high) {
  :root {
    --border-color: #000000;
    --text-secondary: #000000;
  }

  .input,
  .resetButton {
    border-width: 2px;
  }
}

// Reduced motion support
@media (prefers-reduced-motion: reduce) {
  * {
    transition: none !important;
    animation: none !important;
  }
}